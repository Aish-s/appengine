/*
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto2";

package apphosting.tools.devappserver2;

option java_package = "com.google.appengine.tools.development.proto";
option java_multiple_files = true;

// Runtime configuration. This includes a subset of message AppInfo defined in
// apphosting/base/appinfo.proto. It contains only information necessary for
// configuring the runtime. It is the responsibility of the devappserver2
// runtime module to set the fields required by its runtime.
//
// Next Tag: 27
message Config {
  // The app id of the app to be run.
  required bytes app_id = 1;

  // The version id of the app to be run.
  required bytes version_id = 2;

  // The path to the root of the application.
  required bytes application_root = 3;

  // Whether the application has threadsafe enabled.
  optional bool threadsafe = 4 [default = false];

  // The host name to which to connect to send API requests.
  optional string api_host = 17 [default = "localhost"];

  // The port on which to connect to send API requests.
  required int32 api_port = 5;

  // Libraries enabled for the application.
  repeated Library libraries = 6;

  // A regex for files to skip.
  optional string skip_files = 7 [default = "^$"];

  // A regex for files used for static handlers.
  optional string static_files = 8 [default = "^$"];

  optional PythonConfig python_config = 14;

  optional PhpConfig php_config = 9;

  optional NodeConfig node_config = 26;

  optional JavaConfig java_config = 21;

  optional CustomConfig custom_config = 23;

  optional GoConfig go_config = 25;

  // Extra user-specified environment variables.
  repeated Environ environ = 10;

  optional CloudSQL cloud_sql_config = 11;

  required string datacenter = 12;

  required string instance_id = 13;

  // The logging level at which logs should be written to stderr:
  // 0 - Debug
  // 1 - Info
  // 2 - Warning
  // 3 - Error
  // 4 - Critical
  optional int64 stderr_log_level = 15 [default = 1];

  required string auth_domain = 16;

  optional int32 max_instances = 18;

  optional VMConfig vm_config = 19;

  // The port of the cloud SDK development server.
  optional int32 server_port = 20;

  optional bool vm = 22 [default = false];

  repeated string grpc_apis = 24;
}

// Runtime configuration required specifically for the PHP runtime.
message PhpConfig {
  // The path to the PHP executable that should be used.
  optional bytes php_executable_path = 1;

  // Enable interactive debugging using XDebug.
  required bool enable_debugger = 3;

  // The path to the GAE PHP extension that should be loaded.
  optional bytes gae_extension_path = 4;

  // The path to the xdebug extension that should be loaded.
  optional bytes xdebug_extension_path = 5;

  // The version of PHP executable.
  optional bytes php_version = 6;

  // Paths to add to LD_LIBRARY_PATH for PHP
  optional bytes php_library_path = 7;

  // Path to the composer phar
  optional bytes php_composer_path = 8;
}

// Runtime configuration required specifically for the Node runtime.
message NodeConfig {
  // The path to the node executable that should be used.
  optional bytes node_executable_path = 1;
}

message PythonConfig {
  // The path to a Python script that will be executed using execfile before
  // the runtime executes user code. Meant for tools such as debuggers.
  optional string startup_script = 1;

  // An argument that will be provided to the script specified in
  // startup_script.
  optional string startup_args = 2;
}

message JavaConfig {
  repeated string jvm_args = 1;
}

message GoConfig {
  optional string work_dir = 1;
  optional bool enable_watching_go_path = 2;
  optional bool enable_debugging = 3;
}

message CustomConfig {
  optional string custom_entrypoint = 1;
  optional string runtime = 2;
}

message CloudSQL {
  required string mysql_host = 1;
  required int32 mysql_port = 2;
  required string mysql_user = 3;
  required string mysql_password = 4;
  optional string mysql_socket = 5;
}

message Library {
  // The library name.
  required string name = 1;

  // The library version.
  required string version = 2;
}

message Environ {
  required bytes key = 1;

  required bytes value = 2;
}

message VMConfig {
  // URL that docker daemon is listening on.
  // Format: tcp://[host][:port] or unix://path. For more details refer to -H
  // docker parameter:
  // http://docs.docker.io/en/latest/use/basics/#bind-docker-to-another-host-port-or-a-unix-socket.
  optional string docker_daemon_url = 1;

  // Enable logs collection and displaying in local Admin Console.
  optional bool enable_logs = 3;
}
