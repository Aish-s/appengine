/*
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto2";

package cloud_trace;

option java_package = "com.google.apphosting.base.protos";

// SpanKind distinguishes spans generated in a particular context.
// For example, two spans with the same name, one with the kind RPC_CLIENT,
// and the other with RPC_SERVER can indicate the queueing latency associated
// with the span.
enum SpanKind {
  // See descriptions in API v1:
  // cs/symbol:google.devtools.cloudtrace.v1.TraceSpan.SpanKind%20f:google3/google/devtools/cloudtrace/v1/trace.proto
  // and API v2: cs/symbol:google.devtools.cloudtrace.v2.Span.SpanKind.

  // Default value if the span type is unknown or has no representation. Maps
  // to SPAN_KIND_UNSPECIFIED in API v1 and v2.
  SPAN_DEFAULT = 0;

  // Indicates that the span is a server-side handler of an rpc or other remote
  // network request. Maps to RPC_SERVER in API v1 and SERVER in API v2.
  RPC_SERVER = 1;

  // Indicates that the span is the client-side wrapper around an rpc or other
  // remote request. Maps to RPC_CLIENT in API v1 and CLIENT in API v2.
  RPC_CLIENT = 2;

  // Indicates an internal or "local" span. Maps to SPAN_KIND_UNSPECIFIED in API
  // v1 and INTERNAL in API v2.
  INTERNAL = 3;

  // Indicates a producer sending a message to a broker. Maps to
  // SPAN_KIND_UNSPECIFIED in API v1 and PRODUCER in API v2.
  PRODUCER = 4;

  // Indicates a consumer recieving a message from a broker. Maps to
  // SPAN_KIND_UNSPECIFIED in API v1 and CONSUMER in API v2.
  CONSUMER = 5;
}
