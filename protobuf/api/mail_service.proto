/*
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Copyright 2007 Google Inc.
// All Rights Reserved.
//
//
// The Mail service provides a way to send email from an application.
// LINT: LEGACY_NAMES

syntax = "proto2";

package java.apphosting;

option java_package = "com.google.appengine.api.mail";
option java_outer_classname = "MailServicePb";

// Mail service error codes.  Returned via RPC::set_application_error.
message MailServiceError {
  enum ErrorCode {
    OK = 0;

    // General error sending email.  See error message for details.
    INTERNAL_ERROR = 1;
    BAD_REQUEST = 2;

    // Sender is not valid email address for sending application.
    UNAUTHORIZED_SENDER = 3;

    // Attachment has invalid extension.  See notes for
    // MailAttachment.
    INVALID_ATTACHMENT_TYPE = 4;

    // A mail header that is not allowed.
    INVALID_HEADER_NAME = 5;

    // An invalid content-id
    INVALID_CONTENT_ID = 6;
  }
}

// Buffer for each attachment.  File name requires extension from a
// accepted extension allow-list.
//
// Files require specific extensions to avoid such problems such
// as to avoid look-at-me.png.scr being sent from the apphosting
// service.  Similarly it is not possible to mix and match file
// extensions with various content types.
message MailAttachment {
  required string FileName = 1;
  required bytes Data = 2;
  optional string ContentID = 3;

  // We cannot use "reserved" because this breaks python dependencies.
  optional bool DEPRECATED_ContentID_set = 13 [deprecated = true];
}

// Key/Value pair for additional headers.
message MailHeader {
  required string name = 1;
  required string value = 2;
}

// Main mail message.  Does not support arbitrary mail headers or
// bodies.  If additional alternative types are required for the body,
// they will be added later.

message MailMessage {
  // Next ID: 12

  // Sender is the same as From.  The resulting generated code would
  // not compile under Python as 'from' is a keyword of the language.
  //
  // When sending normal email, the sender must be the email address
  // of a valid application admin.
  //
  // When sending an admin alert, the email can be from whomever, but
  // one must still be provided.
  required string Sender = 1;
  // ReplyTo is unrestricted.
  optional string ReplyTo = 2;

  // At least one of the following fields must have at least one value.
  repeated string To = 3;
  repeated string Cc = 4;
  repeated string Bcc = 5;

  required string Subject = 6;

  // At least one of the following is required.
  optional string TextBody = 7;
  optional string HtmlBody = 8;

  // If presented, consider as an AMP Email.
  optional string AmpHtmlBody = 11;

  repeated MailAttachment Attachment = 9;

  repeated MailHeader Header = 10;
}
